# Generated by Django 5.2.6 on 2025-10-20 07:26

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('bio', models.TextField(blank=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('founded_date', models.DateField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='SimpleModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Simple Model',
                'verbose_name_plural': 'Simple Models',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('color', models.CharField(choices=[('red', 'Red'), ('green', 'Green'), ('blue', 'Blue'), ('yellow', 'Yellow'), ('black', 'Black'), ('white', 'White')], default='blue', max_length=20)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='test_app.company')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('hire_date', models.DateField()),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='test_app.company')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='test_app.department')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='test_app.employee')),
                ('skills', models.ManyToManyField(blank=True, related_name='employees', to='test_app.tag')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_departments', to='test_app.employee'),
        ),
        migrations.CreateModel(
            name='RelatedModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('simple_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_models', to='test_app.simplemodel')),
            ],
            options={
                'verbose_name': 'Related Model',
                'verbose_name_plural': 'Related Models',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending'), ('archived', 'Archived')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='test_app.company')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='test_app.department')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_projects', to='test_app.employee')),
                ('team_members', models.ManyToManyField(blank=True, related_name='projects', to='test_app.employee')),
                ('tags', models.ManyToManyField(blank=True, related_name='projects', to='test_app.tag')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to='test_app.employee')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to='test_app.employee')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='test_app.project')),
                ('tags', models.ManyToManyField(blank=True, related_name='tasks', to='test_app.tag')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'ordering': ['due_date', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='TestModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('char_field', models.CharField(help_text='CharField example', max_length=255)),
                ('text_field', models.TextField(blank=True, help_text='TextField example')),
                ('email_field', models.EmailField(blank=True, help_text='EmailField example', max_length=254)),
                ('url_field', models.URLField(blank=True, help_text='URLField example')),
                ('slug_field', models.SlugField(blank=True, help_text='SlugField example')),
                ('integer_field', models.IntegerField(blank=True, help_text='IntegerField example', null=True)),
                ('big_integer_field', models.BigIntegerField(blank=True, help_text='BigIntegerField example', null=True)),
                ('small_integer_field', models.SmallIntegerField(blank=True, help_text='SmallIntegerField example', null=True)),
                ('positive_integer_field', models.PositiveIntegerField(blank=True, help_text='PositiveIntegerField example', null=True)),
                ('positive_big_integer_field', models.PositiveBigIntegerField(blank=True, help_text='PositiveBigIntegerField example', null=True)),
                ('float_field', models.FloatField(blank=True, help_text='FloatField example', null=True)),
                ('decimal_field', models.DecimalField(blank=True, decimal_places=2, help_text='DecimalField example', max_digits=10, null=True)),
                ('boolean_field', models.BooleanField(default=False, help_text='BooleanField example')),
                ('null_boolean_field', models.BooleanField(blank=True, help_text='NullBooleanField example', null=True)),
                ('date_field', models.DateField(blank=True, help_text='DateField example', null=True)),
                ('time_field', models.TimeField(blank=True, help_text='TimeField example', null=True)),
                ('datetime_field', models.DateTimeField(blank=True, help_text='DateTimeField example', null=True)),
                ('duration_field', models.DurationField(blank=True, help_text='DurationField example', null=True)),
                ('file_field', models.FileField(blank=True, help_text='FileField example', null=True, upload_to='test_files/')),
                ('image_field', models.ImageField(blank=True, help_text='ImageField example', null=True, upload_to='test_images/')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending'), ('archived', 'Archived')], default='pending', help_text='Status choice field', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', help_text='Priority choice field', max_length=20)),
                ('json_field', models.JSONField(blank=True, default=dict, help_text='JSONField example', null=True)),
                ('rating', models.FloatField(blank=True, help_text='Rating with validators', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('author', models.OneToOneField(blank=True, help_text='OneToOneField example', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_model', to='test_app.author')),
                ('category', models.ForeignKey(help_text='ForeignKey example', on_delete=django.db.models.deletion.CASCADE, related_name='test_models', to='test_app.category')),
                ('tags', models.ManyToManyField(blank=True, help_text='ManyToManyField example', related_name='test_models', to='test_app.tag')),
            ],
            options={
                'verbose_name': 'Test Model',
                'verbose_name_plural': 'Test Models',
                'ordering': ['-created_at'],
            },
        ),
    ]
